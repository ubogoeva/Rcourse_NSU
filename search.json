[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Обо мне",
    "section": "",
    "text": "Всем привет! Меня зовут Убогоева Елена. Учусь в аспирантуре ИЦиГ СО РАН по направлению биоинформатики. В процессе работы изучила R по книгам и онлайн-курсам, но мне не хватало курса в университете по этому языку. Поэтому решила сделать курс самостоятельно для студентов НГУ.\nВеду телеграм-канал, посвященный разбору интересных материалов по R и статистике, подписывайтесь."
  },
  {
    "objectID": "about.html#образование",
    "href": "about.html#образование",
    "title": "Обо мне",
    "section": "Образование",
    "text": "Образование\nИнститут цитологии и генетики СО РАН | Новосибирск\nАспирантура по направлению биоинформатики и системной биологии | 2020 - настоящее время\nНовосибирский государственный университет | Новосибирск\nМагистратура по направлению цитологии и генетики | 2018 - 2020\nНовосибирский государственный университет | Новосибирск\nБакалавриат по направлению цитологии и генетики | 2014 - 2018"
  },
  {
    "objectID": "about.html#список-публикаций",
    "href": "about.html#список-публикаций",
    "title": "Обо мне",
    "section": "Список публикаций:",
    "text": "Список публикаций:\n\nLavrekha, V. V., Levitsky, V. G., Tsukanov, A. V., Bogomolov, A. G., Grigorovich, D. A., Omelyanchuk, N., Ubogoeva, E. V., Zemlyanskaya, E. V., Mironova, V. (2022). CisCross: A gene list enrichment analysis to predict upstream regulators in Arabidopsis thaliana. Frontiers in plant science, 13, 942710. https://doi.org/10.3389/fpls.2022.942710\nUbogoeva, E. V., Zemlyanskaya, E. V., Xu, J., Mironova, V. (2021). Mechanisms of stress response in the root stem cell niche. Journal of experimental botany, 72(19), 6746–6754. https://doi.org/10.1093/jxb/erab274\nZemlyanskaya, E. V., Omelyanchuk, N. A., Ubogoeva, E. V., Mironova, V. V. (2018). Deciphering Auxin-Ethylene Crosstalk at a Systems Level. International journal of molecular sciences, 19(12), 4060. https://doi.org/10.3390/ijms19124060"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Язык программирования R для анализа данных",
    "section": "",
    "text": "Здесь будет размещаться вся необходимая информация по курсу.\nМожно ознакомиться со списком тем, информацией об авторе, и решать задачи по первой и второй лекции.\nКстати, сайт написан целиком на R. Хотите научиться также? Приходите на курс!\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\nЭффективно организуем работу в R\n\n\n\n\n\n\n\n\n\n\n\n\nMar 8, 2023\n\n\nElena U\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРешения заданий по второй лекции\n\n\n\n\n\n\n\ntask\n\n\n\n\n\n\n\n\n\n\n\nMar 7, 2023\n\n\nElena U\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nРешения задач по первой лекции\n\n\n\n\n\n\n\ntask\n\n\n\n\n\n\n\n\n\n\n\nMar 2, 2023\n\n\nElena U\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЗадания по второй лекции\n\n\n\n\n\n\n\ntask\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2023\n\n\nElena U\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nЗадания по первой лекции\n\n\n\n\n\n\n\ntask\n\n\n\n\n\n\n\n\n\n\n\nFeb 22, 2023\n\n\nElena U\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСписок лекций\n\n\n\n\n\n\n\nlectures\n\n\n\n\n\n\n\n\n\n\n\nFeb 21, 2023\n\n\nЕлена Убогоева\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nПервое занятие по курсу состоялось!\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 19, 2023\n\n\nЕлена Убогоева\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nСписок тем\n\n\n\n\n\n\n\ninfo\n\n\n\n\n\n\n\n\n\n\n\nFeb 3, 2023\n\n\nЕлена Убогоева\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nАнонс курса: “Язык программирования R для анализа данных”\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 3, 2023\n\n\nЕлена Убогоева\n\n\n\n\n\n\n  \n\n\n\n\nИнструкция по установке R и RStudio\n\n\n\n\n\n\n\n\n\n\n\n\nOct 19, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/first_lecture_info.html",
    "href": "posts/first_lecture_info.html",
    "title": "Первое занятие по курсу состоялось!",
    "section": "",
    "text": "Сегодня прочитала первую лекцию по курсу, спасибо всем присоединившимся! Кто не смог посмотреть онлайн, запись доступна на гугл диске для зарегистрировавшихся участников курса.\nСсылка на презентацию размещена здесь (лучше нажимать “открыть в новой вкладке”, так как неудобно работает кнопка назад в презентации).\nКроме того, на этой странице будет доступна гугл форма в качестве домашнего задания по первой лекции.\nНа мой взгляд, лекция прошла достаточно хорошо, вопросов участников было много, удалось разобрать весь подготовленный материал. Спасибо всем, кто поддержал донатами, думаю, что идея организовать курс хорошая.\nУвидимся на следующей неделе в воскресенье в 12.00"
  },
  {
    "objectID": "posts/how_to_install_R.html",
    "href": "posts/how_to_install_R.html",
    "title": "Инструкция по установке R и RStudio",
    "section": "",
    "text": "Шаг 1: Скачать R с официального сайта.\nЗапустить установщик.\nШаг 2: Скачать RStudio (бесплатную версию)\nЗапустить установщик с дефолтными параметрами.\nЕсли вдруг у вас на компьютере юзернейм написан кириллицей, то переходите к разделу часто встречающихся проблем. Если же нет, поздравляю с подключением!"
  },
  {
    "objectID": "posts/how_to_install_R.html#на-macos",
    "href": "posts/how_to_install_R.html#на-macos",
    "title": "Инструкция по установке R и RStudio",
    "section": "На MacOS",
    "text": "На MacOS\nСразу скажу, что в отличие от Windows и Ubuntu на MacOS не имею опыта установки R. В целом, установка не сильно отличается от Windows.\nШаг 1: Скачать R с официального сайта.\nЗапустить установщик.\nШаг 2: Скачать RStudio (бесплатную версию)\nЗапустить установщик с дефолтными параметрами\nОднако, я заметила, что пользователи с процессором M1 сталкиваются с определенными проблемами при установке пакетов. Например, при установке пакета psych нужен gfortran на устройстве. Можно поискать решения, погуглив, например, ‘install gfortran mac M1’. Одно из решений приведено по ссылке. Кроме того, по этой ссылке рекомендации как компилировать пакет data.table для M1 процессора."
  },
  {
    "objectID": "posts/how_to_install_R.html#на-ubuntu-20.04-22.04",
    "href": "posts/how_to_install_R.html#на-ubuntu-20.04-22.04",
    "title": "Инструкция по установке R и RStudio",
    "section": "На Ubuntu 20.04, 22.04",
    "text": "На Ubuntu 20.04, 22.04\nШаг 1: Установить r-base:\nДля Ubuntu 22.04: https://www.how2shout.com/linux/how-to-install-r-base-ubuntu-22-04-lts-jammy/\nДля Ubuntu 20.04: https://linuxize.com/post/how-to-install-r-on-ubuntu-20-04/\nШаг 2: Установить зависимости RStudio\nНабрать в терминале (вызвать можно с помощью сочетания клавиш Ctrl+Alt+T)\nsudo apt update\nsudo apt install libssl-dev libclang-dev libpq5\nШаг 3: Установить RStudio\nСкачать отсюда. Выбрать бесплатную версию, соответствующую вашей операционной системе. Запустить терминал, перейти в папку загрузок и запустить: sudo dpkg -i <DEB_FILE_NAME>, где DEB_FILE_NAME название скачанного .deb файла\nШаг 4: Установить необходимые для многих R пакетов зависимости\nsudo apt update\nsudo apt -y install libpng-dev libxml2-dev libxml2 libxrender1 libxtst6 libxi6 libfontconfig1-dev libmagickwand-dev libmagick++-dev\nsudo apt -y install libudunits2-dev libgeos-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libtiff5-dev libjpeg-dev libpq-dev cargo libcurl4-openssl-dev\nБлагодаря этой инструкции мне удалось успешно установить tidyverse со всеми его зависимостями на свежую Ubuntu 22.04, так что надеюсь, что у вас тоже все получится!"
  },
  {
    "objectID": "posts/how_to_install_R.html#рекомендации-по-настройке-rstudio-перед-началом-работы",
    "href": "posts/how_to_install_R.html#рекомендации-по-настройке-rstudio-перед-началом-работы",
    "title": "Инструкция по установке R и RStudio",
    "section": "Рекомендации по настройке RStudio перед началом работы",
    "text": "Рекомендации по настройке RStudio перед началом работы\nПервое, что советую сделать: настроить удаление RData при закрытии R и не восстанавливать при перезапуске.\n\n\n\nTools -> Global Options - General -> Workspace\n\n\nРекомендую почитать материал по эффективной организации работы в R по ссылке, разобрано более подробно и с большим количеством ссылок на дополнительные материалы"
  },
  {
    "objectID": "posts/how_to_install_R.html#часто-встречающиеся-проблемы",
    "href": "posts/how_to_install_R.html#часто-встречающиеся-проблемы",
    "title": "Инструкция по установке R и RStudio",
    "section": "Часто встречающиеся проблемы",
    "text": "Часто встречающиеся проблемы\nОдна из распространенных проблем у пользователя R на Windows - это написанное кириллицей имя пользователя.\n\nНадежнее всего попробовать переименовать юзернейм например по этой инструкции. Можно погуглить еще, как переименовать пользователя в вашей версии Windows, вот еще одна ссылка.\nТакже можно переустановить систему с созданием юзернейма на латинице.\n\nНо если эти подходы кажутся сложными и долгими, можно изменить пути для записи устанавливаемых библиотек, чтобы они не содержали кириллицу. Однако, я не гарантирую, что это не повлечет проблем в дальнейшем, но этот путь кажется проще.\nТакже способ замены дефолтного пути может помочь, если по умолчанию R пытается поставить пакеты в папку OneDrive.\nШаг 1: Создайте папку в корневом диске C:// или D:// для установки пакетов без кириллических символов и пробелов, например C:/Rlib.\nШаг 2: Создайте папку для временных файлов без кириллических символов и пробелов, например C:/Temp\nШаг 3: Выполните в консоли Rstudio команду\nsystem(\"setx R_LIBS C:/Rlib\")\nsystem(\"setx TEMP C:/Temp\")\nsystem(\"setx TMP C:/Temp\")\nШаг 4: Перезапустите RStudio (можно сделать сочетанием клавиш Ctrl+Shift+F10)\nШаг 5: Проверьте, что R знает, куда ему ставить пакеты. Для этого выполните в консоли Rstudio команду .libPaths(). Скорее всего в выдаче будет две директории, исходная C:/Users/Юзер/AppData/..., и вновь созданная, то есть C:/Rlib. Чтобы переназначить новую директорию как дефолтную для установки пакетов запустите следующий код:\nmyPaths <- .libPaths()   # get the paths\nmyPaths <- c(myPaths[2], myPaths[1])  # switch them\n.libPaths(myPaths)  # reassign them\nШаг 6: Однако это понадобится делать каждый раз при перезапуске сессии RStudio. Чтобы сделать эту настройку постоянной, можно прописать этот код в файле Rprofile. Найти этот файл можно следующим образом: Tools -> Global Options -> General\n\n\n\nздесь содержится путь к актуальной версии R\n\n\nПерейти в эту директорию и дальше в ./library/base/R, найти файл Rprofile\n\n\n\n\nоткрыть файл Rprofile текстовым редактором, например Notepad++\n\n\nВ конце файла вставить строки, переназначающие нашу дефолтную библиотеку:\nmyPaths <- .libPaths()\nmyPaths <- c(myPaths[2], myPaths[1])\n.libPaths(myPaths)\nПерезапустите RStudio. Надеюсь, это поможет успешно устанавливать пакеты и осваивать R!\nНебольшое напоминание - не рекомендуется использовать кириллицу и пробелы в названиях столбцов и файлов, потому что могут быть ошибки с кодировкой при пересылании файла, в результате чего кириллица превратится в ???. Исправить это можно с помощью File - Reopen with encoding, выбрать UTF-8 в качестве кодировки. Но в целом рекомендую даже комментарии, не говоря уж об остальном, писать только латиницей, это позволит избежать проблем с кодировкой в будущем.\nПри написании этого материала использовала следующие источники:\n\nhttps://bdemeshev.github.io/installation/r/R_installation.html\nhttps://www.accelebrate.com/library/how-to-articles/r-rstudio-library\nМатериалы со школы NGSchool\n\nПодписывайтесь на мой телеграм-канал, следите за новостями, обещаю интересные материалы по статистике и R!"
  },
  {
    "objectID": "posts/lectures/index.html",
    "href": "posts/lectures/index.html",
    "title": "Список лекций",
    "section": "",
    "text": "На этой странице буду размещать ссылки на презентации после прочитанной лекции.\n\nПрезентация первой лекции\nПрезентация второй лекции"
  },
  {
    "objectID": "posts/list_of_topics.html",
    "href": "posts/list_of_topics.html",
    "title": "Список тем",
    "section": "",
    "text": "Предварительный список тем\nЛекция 1: Введение. История языка, особенности архитектуры. Переменные, векторы, неявное приведение типов. Логические операции, пропущенные значения и способы работы с ними.\nЛекция 2: Основные типы и структуры данных. Матрицы, списки, датафреймы, их индексация. Установка библиотек. Условные конструкции: if, else, ifelse, case_when. Циклы и почему их не рекомендуют использовать. Векторизация как концепт, заменяющий циклы.\nЛекция 3: Работа с векторами разной длины, ресайклинг. Семейство функций *apply(). Создание собственных функций. Импорт и экспорт данных в R. Описательные статистики. Разбор датасета, тайдинг (очистка) данных.\nЛекция 4: Введение в tidyverse. Основные функции пакета dplyr, разбор учебного датасета.\nЛекция 5: Введение в ggplot2 - мощный пакет для визуализации данных. Философия grammar of graphics. Что такое aes, основные геомы.\nЛекция 6: Основы статистического вывода. Центральная предельная теорема, тест Стьюдента, его непараметрический аналог. Зависимые и независимые выборки. Допущения и ограничения теста Стьюдента\nЛекция 7: Дисперсионный анализ. Нужен ли однофакторный дисперсионный анализ? Поправка Тьюки. Многофакторный дисперсионный анализ.\nЛекция 8. Корреляция и линейная регрессия. Хи квадрат и тесты Фишера\nЛекция 9. Введение в обобщенную линейную модель (GLM). \nЛекция 10. Поправки на множественное тестирование.\nЛекция 11. Биокондактор, пакеты в R специально для решения биологических и биоинформатических задач.\nЛекция 12. Введение в quarto, Rmarkdown (чтобы писать сайты и делать презентации на R)."
  },
  {
    "objectID": "posts/R_course_NSU.html",
    "href": "posts/R_course_NSU.html",
    "title": "Анонс курса: “Язык программирования R для анализа данных”",
    "section": "",
    "text": "Курс рассчитан на биологов бакалавров (желательно 3-4 курса), магистрантов и любых желающих, кто хочет освоить R для статистической обработки данных и визуализации результатов. Опыт программирования не обязателен, но лишним тоже не будет.\nПланируется провести 12 лекций по одной лекции в неделю онлайн на платформе Zoom. Домашние задания и их проверка будут для желающих.\nДля регистрации на курс нужно заполнить гугл форму с небольшой информацией о себе. После регистрации вы будете добавлены в чат в телеграме для удобства координации. Электронная почта нужна, чтобы открывать доступ по почте к материалам курса."
  },
  {
    "objectID": "posts/R_course_NSU.html#предварительный-список-тем",
    "href": "posts/R_course_NSU.html#предварительный-список-тем",
    "title": "Анонс курса: “Язык программирования R для анализа данных”",
    "section": "Предварительный список тем",
    "text": "Предварительный список тем\nМожно ознакомиться по ссылке"
  },
  {
    "objectID": "posts/R_course_NSU.html#предварительное-расписание-занятий",
    "href": "posts/R_course_NSU.html#предварительное-расписание-занятий",
    "title": "Анонс курса: “Язык программирования R для анализа данных”",
    "section": "Предварительное расписание занятий",
    "text": "Предварительное расписание занятий\nПоскольку желающих много и сложно подобрать оптимальное для всех время, то я могу читать два раза в неделю один и тот же материал, чтобы кто не успел прийти в один день, мог послушать в другой.\nВремя: Первое занятие 19 февраля в 12.00. Далее расписание: воскресенье 12 утра и четверг в 19 вечера (по времени НСК).\nПланируется делать запись занятий только для участников курса, прошу не распространять дальше."
  },
  {
    "objectID": "posts/R_course_NSU.html#по-вопросу-оплаты",
    "href": "posts/R_course_NSU.html#по-вопросу-оплаты",
    "title": "Анонс курса: “Язык программирования R для анализа данных”",
    "section": "По вопросу оплаты",
    "text": "По вопросу оплаты\nНебольшие донаты по ~100 рублей приветствуются, но не являются обязательными. Кто хочет поддержать, что я делаю - ссылка на оплату будет в телеграм-чате."
  },
  {
    "objectID": "posts/R_setup.html",
    "href": "posts/R_setup.html",
    "title": "Эффективно организуем работу в R",
    "section": "",
    "text": "Сегодня хочу рассказать небольшие тонкости для качественной организации работы с R в IDE RStudio.\nЯ переписала свой же материал на quarto, здесь лежит старый пост."
  },
  {
    "objectID": "posts/R_setup.html#организация-работы",
    "href": "posts/R_setup.html#организация-работы",
    "title": "Эффективно организуем работу в R",
    "section": "Организация работы",
    "text": "Организация работы\nПервым делом, что нужно освоить для эффективной работы - это перестать использовать setwd(\"C:\\Users\\username\\path\\that\\only\\I\\have\"), а также не использовать абсолютные пути для доступа к файлам.\nСкажу честно, что еще совсем недавно (относительно августа) я использовала абсолютные пути и не видела в этом большого вреда, поскольку работаю преимущественно в одиночку и на одном устройстве. Однако все равно периодически приходилось переписывать пути вручную и это было неудобно. А потом я прочитала статью Дженни Брайан (Jenny Bryan) о желании сжечь компьютер злодеям, которые так делают, и теперь привыкаю следовать правильному подходу - использовать R-проекты для организации доступа к файлам.\nНастоятельно рекомендую самостоятельно почитать эту статью, поскольку ниже я привожу краткую выжимку, где подчеркнула определенные вещи, а за деталями лучше обратиться к оригиналу.\nКак организовать R-проекты\nЕще можно почитать в книге Хэдли Викхама\n\nЗаходим в File - New Project\n\nВ зависимости от того, с нуля создается проект или вы хотите перейти на проект-ориентированный подход для существующих данных выбираем новую директорию или существующую\n\nНапример, я выбрала новую директорию,\nдалее выбираем New Project ->\n\nПишем название проекта и директорию (папку), в которой он будет располагаться. Также я ставлю галочку для открытия в новой сессии RStudio, чтобы не закрывать текущий проект. В результате открывается чистая студия, где рабочая директория будет соответствовать нужному пути. А в созданной директории появился .RProj файл.\nТеперь при закрытии окна арстудио можно будет открыть этот файл и все будет в том виде, в котором вы его оставили (с открытыми скриптами, даже несохраненными и с созданными переменными, последнее лучше нужно отключить, подробнее ниже).\nЕсли же создавать проект в существующей директории, то это еще проще, просто выбираем нужный путь к ней и открываем проект, можно также в новой сессии.\nРекомендуется организовать данные в проекте определенным одинаковым образом для удобства работы. Например, создать отдельную директорию data для данных, можно создать дополнительные папки для сырых и процессированных данных (raw, processed), а еще создать отдельную директорию для рисунков.\nПодробнее можно почитать в книге Ивана Позднякова, которому отдельное спасибо за дискуссии в твиттере и выявление антипаттернов!\nЕще рекомендуется использовать пакет here для универсального доступа к файлам вне зависимости от используемой системы (Windows/Linux/Mac) и текущей директории.\nПочитать о преимуществах можно здесь и в документации к пакету.\nНу и последняя по порядку, но не по значению рекомендация в этой части. Хочу поделиться замечательным руководством Дженни Брайан о правильном именовании файлов для удобной работы, это относится вообще ко всему, не только с точки зрения программирования https://speakerdeck.com/jennybc/how-to-name-files\n\n\nПочему не нужно использовать rm(list = ls()) в начале каждого скрипта?\nВторой антипаттерн, которым я тоже страдала совсем недавно, это привычка писать в начале скрипта rm(list = ls())для удаления всех переменных.\nМне казалось, что это классно придумано, ведь при запуске скрипта я удаляю старые переменные в одну строчку, не надо руками нажимать на метелку в окружении переменных и нет риска запутаться со старыми переменными.\nОднако, с таким подходом я иногда забывала эксплицитно подгрузить часть пакетов (через library), потому что они были загружены ранее при выполнении других скриптов. В результате скрипт оказывается невоспроизводимым, особенно нехорошо, если понадобится делиться скриптом с коллегами.\nВсе это можно легко решить, сделав несколько настроек в RStudio: Tools -> Global Options -> General - убираем галочку с восстановления .RData при запуске студии и выбираем никогда не сохранять .RData при выходе.\n\n\nИтак, вместо того чтобы удалять переменные в начале нового скрипта, лучше воспользоваться сочетанием горячих клавиш Ctrl/Cmd+Shift+F10. Таким образом мы полностью перезапустим сессию, удалив старые переменные, а также проверим, что не забыли загрузить нужные пакеты в начале скрипта.\nКроме того, полезно перезапускать сессию таким сочетанием клавиш в процессе работы, чтобы убедиться, что все нужные переменные созданы в рамках скрипта, а не где-то когда-то были подсчитаны в консоли и висят в окружении, что опять-таки вызовет проблемы с воспроизводимостью при запуске вашего скрипта с нуля.\n\n\nСтилистические рекомендации\nМожно ознакомиться с полным списком рекомендаций по стилю кода в книге Хэдли Викхама, здесь приведу выдержку самых важных на мой взгляд\n\nВ R для именования переменных принят snake_case, то есть рекомендуется использовать в качестве разделителя нижнее подчеркивание (а не например заглавные буквы - camelCase и не точки). Но конечно же camelCase не запрещен к использованию, главное правило - оставаться последовательным, то есть если решили использовать camelCase, то так и делать на протяжении всего проекта. Почитать детальнее можно здесь и здесь: это главы из книги Хэдли Викхама R for Data Science.\nНе стоит использовать сокращения T и F от TRUE и FALSE, поскольку полные наименования R защищает от переписывания, а вот сокращения нет и можно попасть в глупую ситуацию, создав в какой-то момент переменную T или F.\nЛучше использовать в качестве оператора присваивания <-, а не =\nЕсли что, стрелочку можно вставить с помощью хоткея Alt - (альт минус) в RStudio. Правоприсвоение (2 -> a) не рекомендуется, так как снижает читаемость кода.\nЕще мне понравилось, что в новых версиях RStudio можно сделать скобки разноцветными, чтобы облегчить восприятие вложенного кода (хотя сильной вложенности кода стоит по возможности избегать). Чтобы это сделать, нужно зайти в Tools - Global Options - Code - Display и поставить галочку здесь:\n\nСовет новичкам (и не только новичкам) как наиболее эффективно просить помощи с кодом у коллег.\nКак минимум скидывать код и скриншот ошибки (не фото на телефон экрана!), чтобы не было просто: “АААА у меня ничего не работает”.\nВ идеале готовить воспроизводимые примеры ошибки, например с помощью пакета reprex. В книге Викхама Mastering Shiny можно почитать, как это работает, расписано с точки зрения отладки Shiny app, но на самом деле это работает для любых трудностей в коде.\nПолезные хоткеи при работе в RStudio (для пользователей Mac OS Ctrl = Cmd):\n\nAlt + -(Альт минус) чтобы вставить оператор присваивания\nCtrl/Cmd+Enter для запуска строчки кода (можно выделять несколько строк и запускать их)\nCtrl+Shift+C для быстрого комментирования и раскомментирования строчки кода\nCtrl+Shift+M для вставки пайпа %>%\nCtrl+Shift+Enter для запуска скрипта целиком\nCtrl+Shift+F10 для перезапуска арстудии. Полезно в сочетании с предыдущей командой для проверки, что все в скрипте хорошо работает.\nНапоминаю, что можно пользоваться табом для автодополнения названий переменных и функций.\nТакже напоминаю, что в консоли с помощью стрелки вверх можно вызвать предыдущие команды.\n\nС полным списком хоткеев можно ознакомиться в Tools - Keyboard Shortcuts Help или лично мне удобнее их смотреть в Tools - Modify Keyboard Shortcuts."
  },
  {
    "objectID": "posts/R_setup.html#полезные-материалы-и-ссылки",
    "href": "posts/R_setup.html#полезные-материалы-и-ссылки",
    "title": "Эффективно организуем работу в R",
    "section": "Полезные материалы и ссылки",
    "text": "Полезные материалы и ссылки\n\nМного раз упомянутая статья Дженни Брайан, еще раз настоятельно рекомендую почитать\nКнига авторов Jenny Bryan и Jim Hester. Тоже советую ознакомиться, хотя целиком я ее сама не прочитала. Здесь собраны как советы новичкам, так и советы для продвинутых юзеров, например как правильном искать ошибки в R (не только дебаг принтом)).\nПрезентация Дженни Брайан о правильном именовании файлов.\nОрганизация работы с Git в R\nКнига Ивана Позднякова “Анализ данных и статистика в R”. Узнала про книгу после курса Бластима, всем рекомендую + на русском языке."
  },
  {
    "objectID": "posts/solutions/solution1.html",
    "href": "posts/solutions/solution1.html",
    "title": "Решения задач по первой лекции",
    "section": "",
    "text": "Можно проверить свое решение и сравнить с моим.\nРассчитано на самопроверку: ваша задача написать такой код, чтобы совпал с моим правильным ответом. Плюс есть еще несколько заданий на подумать и вспомнить материал лекции.\nЕсли вдруг найдутся ошибки/опечатки, пишите на почту e.ubogoeva@alumni.nsu.ru или в телеграм. Вопросы по заданиям также можно писать на почту или в телеграм, телеграм чуть предпочтительнее."
  },
  {
    "objectID": "posts/solutions/solution1.html#калькулятор",
    "href": "posts/solutions/solution1.html#калькулятор",
    "title": "Решения задач по первой лекции",
    "section": "Калькулятор",
    "text": "Калькулятор\n\nРазделите числа 2583, 5971, 2946, 5783 на 7\n\n\n2583 / 7\n\n[1] 369\n\n5971 / 7\n\n[1] 853\n\n2946 / 7\n\n[1] 420.8571\n\n5783 / 7\n\n[1] 826.1429\n\n\n\nПосчитайте остаток от деления этих же чисел на 7.\n\n\n2583 %% 7\n\n[1] 0\n\n5971 %% 7\n\n[1] 0\n\n2946 %% 7\n\n[1] 6\n\n5783 %% 7\n\n[1] 1\n\n\n\nА целую часть от деления (числа те же)?\nПодсказка: справку по арифметическим операторам можно вызвать, набрав например ?`+` в консоли или просто погуглить: оператор целочисленного деления R\n\n\n2583 %/% 7\n\n[1] 369\n\n5971 %/% 7\n\n[1] 853\n\n2946 %/% 7\n\n[1] 420\n\n5783 %/% 7\n\n[1] 826\n\n\n\nПосчитайте квадратный корень из числа 289 двумя разными способами\n\n\nsqrt(289)\n\n[1] 17\n\n289 ^ 0.5\n\n[1] 17\n\n\n\nПосчитайте логарифм по основанию 7 от числа 96889010407\n\n\nlog(96889010407, 7)\n\n[1] 13\n\n\n\nТеперь натуральный логарифм от числа 10, результат умножить на 6\n\n\nlog(10) * 6\n\n[1] 13.81551"
  },
  {
    "objectID": "posts/solutions/solution1.html#работа-с-векторами",
    "href": "posts/solutions/solution1.html#работа-с-векторами",
    "title": "Решения задач по первой лекции",
    "section": "Работа с векторами",
    "text": "Работа с векторами\n\nСоздайте вектор из чисел 5, 203, 11\n\n\nc(5, 203, 11)\n\n[1]   5 203  11\n\n\n\nСоздайте вектор из чисел от 314 до 335\n\n\n314:335\n\n [1] 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332\n[20] 333 334 335\n\n\n\nСоздайте вектор чисел от 20 до 2. Подсказка: оператор : работает и для создания последовательностей с шагом -1/\n\n\n20:2\n\n [1] 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2\n\n\n\nСоздайте вектор чисел от 20 до 2 с шагом -2.\n\n\nseq(20, 2, -2)\n\n [1] 20 18 16 14 12 10  8  6  4  2\n\n\n\nСоздайте вектор, состоящий из двадцати единиц\n\nrep(1, 20)\n\n [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n\nСоздайте вектор 1 1 1 2 2 2 3 3 3. Подсказка: чтобы узнать как это можно сделать, посмотрите справку функции rep()\n\nrep(1:3, each = 3)\n\n[1] 1 1 1 2 2 2 3 3 3\n\n\nА теперь вектор 1 1 2 2 3 3 1 1 2 2 3 3 1 1 2 2 3 3 (если что непонятно - смотрим справку и гуглим)\n\nrep(1:3, each = 2, times = 3)\n\n [1] 1 1 2 2 3 3 1 1 2 2 3 3 1 1 2 2 3 3"
  },
  {
    "objectID": "posts/solutions/solution1.html#логические-операторы",
    "href": "posts/solutions/solution1.html#логические-операторы",
    "title": "Решения задач по первой лекции",
    "section": "Логические операторы",
    "text": "Логические операторы\n\nПроверьте на равенство: остаток от деления 257 на 6 и число 5\n\n\n5 == 257 %% 6\n\n[1] TRUE\n\n\n\nПроверьте на равенство число 2 и квадратный корень из 2 в квадрате.\nОтвет убил:\n\n2 == sqrt(2) ^ 2\n\n[1] FALSE\n\n\n\n2 == sqrt(2) ^ 2\n\nПочему это произошло, можно почитать здесь. Такой прикол существует не только в R, а характерен для любого языка программирования, поскольку дробные числа в компьютере хранятся с ограниченной (хоть и достаточно большой) точностью. Для проверки на равенство такого рода можно использовать функцию all.equal().\n\nall.equal(2, sqrt(2) ^ 2)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nNote\n\n\n\nВсе дело в том, что числа в компьютере записываются в виде степеней двойки.\n\n\nСколько чисел, делящихся на 3 без остатка, в векторе чисел от 1 до 80?\n\nsum(1:80 %% 3 == 0)\n\n[1] 26"
  },
  {
    "objectID": "posts/solutions/solution1.html#индексация-векторов",
    "href": "posts/solutions/solution1.html#индексация-векторов",
    "title": "Решения задач по первой лекции",
    "section": "Индексация векторов",
    "text": "Индексация векторов\n\nСоздайте вектор x, состоящий из чисел с 2 до 20 с шагом 2. Извлеките 2, 5, 7 элемент\n\n\nx <- seq(2, 20, 2)\nx[c(2, 5, 7)]\n\n[1]  4 10 14\n\n\n\nСоздайте вектор x, состоящий из чисел с 2 до 20 с шагом 2. Извлеките каждый третий элемент.\n\nx <- seq(2, 20, 2)\nx[seq(3, length(x), 3)]\n\n[1]  6 12 18\n\n\nИндесация по условию. Извлеките все числа, кратные 9, в векторе чисел от 1 до 100.\n\nx <- 1:100\nx[x %% 9 == 0]\n\n [1]  9 18 27 36 45 54 63 72 81 90 99\n\n\nИзвлеките все числа, больше или равные нулю в векторе -4 -2 0 2 4\n\nx <- seq(-4, 4, 2)\nx[x >= 0]\n\n[1] 0 2 4"
  },
  {
    "objectID": "posts/solutions/solution1.html#приведение-типов",
    "href": "posts/solutions/solution1.html#приведение-типов",
    "title": "Решения задач по первой лекции",
    "section": "Приведение типов",
    "text": "Приведение типов\n\nКакой будет тип у вектора c(TRUE, 2, 'gene')? И почему?\nОтвет: character vector, поскольку этот тип является наиболее общим у приведенных элементов вектора\nВспомните, в каком порядке должно идти приведение типов.\nОтвет: logical > integer > numeric > character\nКакими функциями можно превратить вектор в нужный тип?\nОтвет: например, as.integer(). В общем случае as.<нужный_тип>"
  },
  {
    "objectID": "posts/solutions/solution1.html#пропущенные-значения",
    "href": "posts/solutions/solution1.html#пропущенные-значения",
    "title": "Решения задач по первой лекции",
    "section": "Пропущенные значения",
    "text": "Пропущенные значения\n\nУберите пропущенные значения из вектора\nmissed_values <- c(NA, 1:3, NA, 7, 10, NA, NA, NA, 8, 5, 7)\n\nmissed_values <- c(NA, 1:3, NA, 7, 10, NA, NA, NA, 8, 5, 7)\nmissed_values[!is.na(missed_values)]\n\n[1]  1  2  3  7 10  8  5  7\n\n\nПосчитайте среднее в этом векторе двумя разными способами\n\nmean(missed_values[!is.na(missed_values)])\n\n[1] 5.375\n\nmean(missed_values, na.rm = TRUE)\n\n[1] 5.375\n\n\nПочему при сравнении NA == NA получается NA?\nОтвет: Мы не можем сделать вывод, равно ли одно неизвестное другому неизвестному\nЧем плохи пропущенные значения?\nОтвет: Мешают вычислять описательные статистики, невозможно делать сравнения ==, <, >, некоторые функции просто не работают с пропущенными значениями."
  },
  {
    "objectID": "posts/solutions/solution2.html",
    "href": "posts/solutions/solution2.html",
    "title": "Решения заданий по второй лекции",
    "section": "",
    "text": "Составлены в формате задание - ответ к нему.\nРассчитано на самопроверку: ваша задача написать такой код, чтобы совпал с моим правильным ответом. Плюс есть еще несколько заданий на подумать и вспомнить материал лекции.\nНе стесняйтесь гуглить, это необходимо для решения многих задач в программировании, которые могут встретиться в реальной жизни.\nЕсли вдруг найдутся ошибки/опечатки, пишите на почту e.ubogoeva@alumni.nsu.ru или в телеграм. Вопросы по заданиям также можно писать на почту или в телеграм, телеграм чуть предпочтительнее."
  },
  {
    "objectID": "posts/solutions/solution2.html#матрицы",
    "href": "posts/solutions/solution2.html#матрицы",
    "title": "Решения заданий по второй лекции",
    "section": "Матрицы",
    "text": "Матрицы\n\nСоздайте матрицу A, состоящую из единиц и имеющую 4 колонки и 4 строки:\n\nA <- matrix(1, 4, 4)\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n[2,]    1    1    1    1\n[3,]    1    1    1    1\n[4,]    1    1    1    1\n\n\nЗамените третью строку матрицы A на числа 5, 6, 7, 8\n\nA[3, ] <- c(5, 6, 7, 8)\nA\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n[2,]    1    1    1    1\n[3,]    5    6    7    8\n[4,]    1    1    1    1\n\n\nИзвлеките четвертую колонку этой матрицы\n\nA[, 4]\n\n[1] 1 1 8 1\n\n\nСоздайте матрицу M из чисел от 21 до 40 размером 4 строки и 5 столбцов.\n\nM <- matrix(21:40, nrow = 4, ncol = 5)\nM\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21   25   29   33   37\n[2,]   22   26   30   34   38\n[3,]   23   27   31   35   39\n[4,]   24   28   32   36   40\n\n\nЗамените в матрице M четные значения словом “Четное”, а нечетные словом “Нечетное”.\n\nifelse(M %% 2 == 0, 'Четное', 'Нечетное')\n\n     [,1]       [,2]       [,3]       [,4]       [,5]      \n[1,] \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\"\n[2,] \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"  \n[3,] \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\"\n[4,] \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\""
  },
  {
    "objectID": "posts/solutions/solution2.html#списки",
    "href": "posts/solutions/solution2.html#списки",
    "title": "Решения заданий по второй лекции",
    "section": "Списки",
    "text": "Списки\n\nСоздайте список list1, первый элемент: числовой вектор от 11 до 77 с шагом 3, второй элемент: буквы строчные английского алфавита - это встроенный набор letters, третий элемент: вектор TRUE, FALSE.\n\nlist1 <- list(seq(11, 77, 3), letters, c(TRUE, FALSE))\nlist1\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n\nИзвлеките второй элемент списка в виде вектора\n\nlist1[[2]]\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n\nИзвлеките четвертый элемент вектора первого элемента списка\n\nlist1[[1]][4]\n\n[1] 20\n\n\nСоздайте новый элемент в списке, назовите его double_vector и заполните его первым элементом списка, умноженного на 2\n\nlist1$double_vector <- list1[[1]] * 2\nlist1\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n$double_vector\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nИзвлеките элемент double_vector двумя разными способами\n\nlist1$double_vector\n\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\nlist1[['double_vector']]\n\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nИзвлеките 1, 3, 5, 7 элементы вектора double_vector\n\nlist1$double_vector[c(1, 3, 5, 7)]\n\n[1] 22 34 46 58\n\n\nЗамените пятый элемент double_vector на 100. Правила такие же как при замене элементов векторов\n\nlist1$double_vector[5] <- 100\nlist1\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n$double_vector\n [1]  22  28  34  40 100  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nСоздайте отдельный список small_list из первого и третьего элемента списка list1.\n\nsmall_list <- list1[c(1, 3)]\nsmall_list\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n[1]  TRUE FALSE\n\n\nСоставьте список list2, состоящий из заглавных букв английского алфавита (LETTERS) номером 10, 15, 10, 15.\n\nlist2 <- LETTERS[c(10, 15, 10, 15)]\nlist2\n\n[1] \"J\" \"O\" \"J\" \"O\"\n\n\nОбъедините list1 и list2 в список list_whole, проверьте тип данных, выведите структуру.\n\nlist_whole <- list(list1, list2)\nclass(list_whole)\n\n[1] \"list\"\n\nstr(list_whole)\n\nList of 2\n $ :List of 4\n  ..$              : num [1:23] 11 14 17 20 23 26 29 32 35 38 ...\n  ..$              : chr [1:26] \"a\" \"b\" \"c\" \"d\" ...\n  ..$              : logi [1:2] TRUE FALSE\n  ..$ double_vector: num [1:23] 22 28 34 40 100 52 58 64 70 76 ...\n $ : chr [1:4] \"J\" \"O\" \"J\" \"O\""
  },
  {
    "objectID": "posts/solutions/solution2.html#датафреймы",
    "href": "posts/solutions/solution2.html#датафреймы",
    "title": "Решения заданий по второй лекции",
    "section": "Датафреймы",
    "text": "Датафреймы\n\nСоздадим датафрейм df, первая колонка: числа 10, 12, 15, вторая колонка вектор TRUE, FALSE, TRUE, третья колонка любой строковый вектор\n\ndf <- data.frame(c(10, 12, 15), c(TRUE, FALSE, TRUE),\n                 letters[1:3])\ndf\n\n  c.10..12..15. c.TRUE..FALSE..TRUE. letters.1.3.\n1            10                 TRUE            a\n2            12                FALSE            b\n3            15                 TRUE            c\n\n\nЛучше создать с именами:\n\ndf <- data.frame(values = c(10, 12, 15), logi = c(TRUE, FALSE, TRUE), character = letters[1:3])\ndf\n\n  values  logi character\n1     10  TRUE         a\n2     12 FALSE         b\n3     15  TRUE         c\n\n\nТакже для переименования можно использовать функцию colnames()\n\ncolnames(df) <- c('name1', 'name2', 'name3')\ndf\n\n  name1 name2 name3\n1    10  TRUE     a\n2    12 FALSE     b\n3    15  TRUE     c\n\n\nИзвлеките 1, 2, 3 строки 5, 6, 9 колонки датасета mtcars (встроен в R, достаточно набрать mtcars).\n\nmtcars[1:3, c(5, 6, 9)]\n\n              drat    wt am\nMazda RX4     3.90 2.620  1\nMazda RX4 Wag 3.90 2.875  1\nDatsun 710    3.85 2.320  1"
  },
  {
    "objectID": "posts/solutions/solution2.html#установка-пакетов",
    "href": "posts/solutions/solution2.html#установка-пакетов",
    "title": "Решения заданий по второй лекции",
    "section": "Установка пакетов",
    "text": "Установка пакетов\n\nУстановите пакет ggplot2 (пакет с CRAN-а для графиков)\n\ninstall.packages(\"ggplot2\")\n\nЗагрузите пакет ggplot2\n\nlibrary(ggplot2)\n\nЗадание со звездочкой (на способность гуглить): удалите (unload) пакет ggplot2 из окружения. Это редко, но иногда может понадобиться, при загрузке ненужного пакета. Однако, я рекомендую перезапустить RStudio комбинацией клавиш Ctrl+Shift+F10, и после этого загрузить уже только нужные пакеты.\n\ndetach(package:ggplot2)"
  },
  {
    "objectID": "posts/solutions/solution2.html#условия",
    "href": "posts/solutions/solution2.html#условия",
    "title": "Решения заданий по второй лекции",
    "section": "Условия",
    "text": "Условия\n\nИзвлечь случайное число из набора 0.00015, 0.6, 0.056, 0.02, если число < 0.05, вывести в консоль “p-value < 0.05”, иначе вывести “p-value не значимо”.\n\nvalue <- sample(c(0.00015, 0.6, 0.02, 0.056), 1)\nif (value < 0.05) {\n  print('p-value < 0.05')\n} else {\n  print(\"p-value не значимо\")\n}\n\n[1] \"p-value < 0.05\"\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nНапоминаю, что для извлечения случайных чисел используется функция sample()"
  },
  {
    "objectID": "posts/solutions/solution2.html#циклы",
    "href": "posts/solutions/solution2.html#циклы",
    "title": "Решения заданий по второй лекции",
    "section": "Циклы",
    "text": "Циклы\nНа циклы заданий не будет, потому что все, что я смогла придумать легко решается без циклов. Совет от соника: не использовать циклы."
  },
  {
    "objectID": "posts/solutions/solution2.html#векторизация",
    "href": "posts/solutions/solution2.html#векторизация",
    "title": "Решения заданий по второй лекции",
    "section": "Векторизация",
    "text": "Векторизация\n\nСоздайте вектор p, состоящий из значений 4, 5, 6, 7, и вектор q, состоящий из 0, 1, 2, 3.\n\np <- c(4, 5, 6, 7)\nq <- c(0, 1, 2, 3)\np\n\n[1] 4 5 6 7\n\nq\n\n[1] 0 1 2 3\n\n\nПосчитайте поэлементную сумму векторов p и q:\n\np + q\n\n[1]  4  6  8 10\n\n\nПосчитайте поэлементную разницу p и q:\n\np - q\n\n[1] 4 4 4 4\n\n\nПоделите каждый элемент вектора p на соответствующий ему элемент вектора q:\n\np / q\n\n[1]      Inf 5.000000 3.000000 2.333333\n\n\nСоздайте вектор, в котором будут содержаться первые 20 степеней двойки.\n\n2 ^ (1:20)\n\n [1]       2       4       8      16      32      64     128     256     512\n[10]    1024    2048    4096    8192   16384   32768   65536  131072  262144\n[19]  524288 1048576\n\n\nПосчитайте сумму чисел, кратных 3 ИЛИ кратных 5 в наборе чисел от 1 до 100\n\nx <- 1:100\nsum(x[x %% 3 == 0 | x %% 5 == 0])\n\n[1] 2418\n\n\nНайдите сумму всех простых чисел от 1 до 100, где 1 не является простым. Если не получается решить задание сейчас, лучше подождать следующей лекции, разберем более подробно векторизацию и работу с функциями семейства *apply() и создание собственных функций.\n\nis_prime <- function(x) {\n  if (x == 1) return(FALSE)\n  if (x == 2) return(2)\n  if (sum(x %% 2:(x-1) == 0) == 0) return(x) else return(FALSE)\n}\nsum(sapply(1:100, is_prime))\n\n[1] 1060"
  },
  {
    "objectID": "posts/tasks/task1.html",
    "href": "posts/tasks/task1.html",
    "title": "Задания по первой лекции",
    "section": "",
    "text": "Составлены в формате задание - ответ к нему.\nРассчитано на самопроверку: ваша задача написать такой код, чтобы совпал с моим правильным ответом. Плюс есть еще несколько заданий на подумать и вспомнить материал лекции.\nЕсли вдруг найдутся ошибки/опечатки, пишите на почту e.ubogoeva@alumni.nsu.ru или в телеграм. Вопросы по заданиям также можно писать на почту или в телеграм, телеграм чуть предпочтительнее."
  },
  {
    "objectID": "posts/tasks/task1.html#калькулятор",
    "href": "posts/tasks/task1.html#калькулятор",
    "title": "Задания по первой лекции",
    "section": "Калькулятор",
    "text": "Калькулятор\n\nРазделите числа 2583, 5971, 2946, 5783 на 7\n\n\n\n[1] 369\n\n\n[1] 853\n\n\n[1] 420.8571\n\n\n[1] 826.1429\n\n\n\nПосчитайте остаток от деления этих же чисел на 7.\n\n\n\n[1] 0\n\n\n[1] 0\n\n\n[1] 6\n\n\n[1] 1\n\n\n\nА целую часть от деления (числа те же)?\nПодсказка: справку по арифметическим операторам можно вызвать, набрав например ?`+` в консоли или просто погуглить: оператор целочисленного деления R\n\n\n\n[1] 369\n\n\n[1] 853\n\n\n[1] 420\n\n\n[1] 826\n\n\n\nПосчитайте квадратный корень из числа 289 двумя разными способами\n\n\n\n[1] 17\n\n\n[1] 17\n\n\n\nПосчитайте логарифм по основанию 7 от числа 96889010407\n\n\n\n[1] 13\n\n\n\nТеперь натуральный логарифм от числа 10, результат умножить на 6\n\n\n\n[1] 13.81551"
  },
  {
    "objectID": "posts/tasks/task1.html#работа-с-векторами",
    "href": "posts/tasks/task1.html#работа-с-векторами",
    "title": "Задания по первой лекции",
    "section": "Работа с векторами",
    "text": "Работа с векторами\n\nСоздайте вектор из чисел 5, 203, 11\n\n\n\n[1]   5 203  11\n\n\n\nСоздайте вектор из чисел от 314 до 335\n\n\n\n [1] 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332\n[20] 333 334 335\n\n\n\nСоздайте вектор чисел от 20 до 2. Подсказка: оператор : работает и для создания последовательностей с шагом -1/\n\n\n\n [1] 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2\n\n\n\nСоздайте вектор чисел от 20 до 2 с шагом -2.\n\n\n\n [1] 20 18 16 14 12 10  8  6  4  2\n\n\n\nСоздайте вектор, состоящий из двадцати единиц\n\n\n [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n\nСоздайте вектор 1 1 1 2 2 2 3 3 3. Подсказка: чтобы узнать как это можно сделать, посмотрите справку функции rep()\n\n\n[1] 1 1 1 2 2 2 3 3 3\n\n\nА теперь вектор 1 1 2 2 3 3 1 1 2 2 3 3 1 1 2 2 3 3 (если что непонятно - смотрим справку и гуглим)\n\n\n [1] 1 1 2 2 3 3 1 1 2 2 3 3 1 1 2 2 3 3"
  },
  {
    "objectID": "posts/tasks/task1.html#логические-операторы",
    "href": "posts/tasks/task1.html#логические-операторы",
    "title": "Задания по первой лекции",
    "section": "Логические операторы",
    "text": "Логические операторы\n\nПроверьте на равенство: остаток от деления 257 на 6 и число 5\n\n\n\n[1] TRUE\n\n\n\nПроверьте на равенство число 2 и квадратный корень из 2 в квадрате.\nОтвет убил:\n\n\n[1] FALSE\n\n\n\n2 == sqrt(2) ^ 2\n\nПочему это произошло, можно почитать здесь. Такой прикол существует не только в R, а характерен для любого языка программирования, поскольку дробные числа в компьютере хранятся с ограниченной (хоть и достаточно большой) точностью. Для проверки на равенство такого рода можно использовать функцию all.equal().\n\nall.equal(2, sqrt(2) ^ 2)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nNote\n\n\n\nВсе дело в том, что числа в компьютере записываются в виде степеней двойки.\n\n\nСколько чисел, делящихся на 3 без остатка, в векторе чисел от 1 до 80?\n\n\n[1] 26"
  },
  {
    "objectID": "posts/tasks/task1.html#индексация-векторов",
    "href": "posts/tasks/task1.html#индексация-векторов",
    "title": "Задания по первой лекции",
    "section": "Индексация векторов",
    "text": "Индексация векторов\n\nСоздайте вектор x, состоящий из чисел с 2 до 20 с шагом 2. Извлеките 2, 5, 7 элемент\n\n\n\n[1]  4 10 14\n\n\n\nСоздайте вектор x, состоящий из чисел с 2 до 20 с шагом 2. Извлеките каждый третий элемент.\n\n\n[1]  6 12 18\n\n\nИндесация по условию. Извлеките все числа, кратные 9, в векторе чисел от 1 до 100.\n\n\n [1]  9 18 27 36 45 54 63 72 81 90 99\n\n\nИзвлеките все числа, больше или равные нулю в векторе -4 -2 0 2 4\n\n\n[1] 0 2 4"
  },
  {
    "objectID": "posts/tasks/task1.html#приведение-типов",
    "href": "posts/tasks/task1.html#приведение-типов",
    "title": "Задания по первой лекции",
    "section": "Приведение типов",
    "text": "Приведение типов\n\nКакой будет тип у вектора c(TRUE, 2, 'gene')? И почему?\nВспомните, в каком порядке должно идти приведение типов.\nКакими функциями можно превратить вектор в нужный тип?"
  },
  {
    "objectID": "posts/tasks/task1.html#пропущенные-значения",
    "href": "posts/tasks/task1.html#пропущенные-значения",
    "title": "Задания по первой лекции",
    "section": "Пропущенные значения",
    "text": "Пропущенные значения\n\nУберите пропущенные значения из вектора\nmissed_values <- c(NA, 1:3, NA, 7, 10, NA, NA, NA, 8, 5, 7)\n\n\n[1]  1  2  3  7 10  8  5  7\n\n\nПосчитайте среднее в этом векторе двумя разными способами\n\n\n[1] 5.375\n\n\n[1] 5.375\n\n\nПочему при сравнении NA == NA получается NA?\nЧем плохи пропущенные значения?"
  },
  {
    "objectID": "posts/tasks/task2.html",
    "href": "posts/tasks/task2.html",
    "title": "Задания по второй лекции",
    "section": "",
    "text": "Составлены в формате задание - ответ к нему.\nРассчитано на самопроверку: ваша задача написать такой код, чтобы совпал с моим правильным ответом. Плюс есть еще несколько заданий на подумать и вспомнить материал лекции.\nНе стесняйтесь гуглить, это необходимо для решения многих задач в программировании, которые могут встретиться в реальной жизни.\nЕсли вдруг найдутся ошибки/опечатки, пишите на почту e.ubogoeva@alumni.nsu.ru или в телеграм. Вопросы по заданиям также можно писать на почту или в телеграм, телеграм чуть предпочтительнее."
  },
  {
    "objectID": "posts/tasks/task2.html#матрицы",
    "href": "posts/tasks/task2.html#матрицы",
    "title": "Задания по второй лекции",
    "section": "Матрицы",
    "text": "Матрицы\n\nСоздайте матрицу A, состоящую из единиц и имеющую 4 колонки и 4 строки:\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n[2,]    1    1    1    1\n[3,]    1    1    1    1\n[4,]    1    1    1    1\n\n\nЗамените третью строку матрицы A на числа 5, 6, 7, 8\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    1    1    1\n[2,]    1    1    1    1\n[3,]    5    6    7    8\n[4,]    1    1    1    1\n\n\nИзвлеките четвертую колонку этой матрицы\n\n\n[1] 1 1 8 1\n\n\nСоздайте матрицу M из чисел от 21 до 40 размером 4 строки и 5 столбцов.\n\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]   21   25   29   33   37\n[2,]   22   26   30   34   38\n[3,]   23   27   31   35   39\n[4,]   24   28   32   36   40\n\n\nЗамените в матрице M четные значения словом “Четное”, а нечетные словом “Нечетное”.\n\n\n     [,1]       [,2]       [,3]       [,4]       [,5]      \n[1,] \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\"\n[2,] \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"  \n[3,] \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\" \"Нечетное\"\n[4,] \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\"   \"Четное\""
  },
  {
    "objectID": "posts/tasks/task2.html#списки",
    "href": "posts/tasks/task2.html#списки",
    "title": "Задания по второй лекции",
    "section": "Списки",
    "text": "Списки\n\nСоздайте список list1, первый элемент: числовой вектор от 11 до 77 с шагом 3, второй элемент: буквы строчные английского алфавита - это встроенный набор letters, третий элемент: вектор TRUE, FALSE.\n\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n\nИзвлеките второй элемент списка в виде вектора\n\n\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n\nИзвлеките четвертый элемент вектора первого элемента списка\n\n\n[1] 20\n\n\nСоздайте новый элемент в списке, назовите его double_vector и заполните его первым элементом списка, умноженного на 2\n\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n$double_vector\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nИзвлеките элемент double_vector двумя разными способами\n\n\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\n [1]  22  28  34  40  46  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nИзвлеките 1, 3, 5, 7 элементы вектора double_vector\n\n\n[1] 22 34 46 58\n\n\nЗамените пятый элемент double_vector на 100. Правила такие же как при замене элементов векторов\n\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n[20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\n\n[[3]]\n[1]  TRUE FALSE\n\n$double_vector\n [1]  22  28  34  40 100  52  58  64  70  76  82  88  94 100 106 112 118 124 130\n[20] 136 142 148 154\n\n\nСоздайте отдельный список small_list из первого и третьего элемента списка list1.\n\n\n[[1]]\n [1] 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59 62 65 68 71 74 77\n\n[[2]]\n[1]  TRUE FALSE\n\n\nСоставьте список list2, состоящий из заглавных букв английского алфавита (LETTERS) номером 10, 15, 10, 15.\n\n\n[1] \"J\" \"O\" \"J\" \"O\"\n\n\nОбъедините list1 и list2 в список list_whole, проверьте тип данных, выведите структуру.\n\n\n[1] \"list\"\n\n\nList of 2\n $ :List of 4\n  ..$              : num [1:23] 11 14 17 20 23 26 29 32 35 38 ...\n  ..$              : chr [1:26] \"a\" \"b\" \"c\" \"d\" ...\n  ..$              : logi [1:2] TRUE FALSE\n  ..$ double_vector: num [1:23] 22 28 34 40 100 52 58 64 70 76 ...\n $ : chr [1:4] \"J\" \"O\" \"J\" \"O\""
  },
  {
    "objectID": "posts/tasks/task2.html#датафреймы",
    "href": "posts/tasks/task2.html#датафреймы",
    "title": "Задания по второй лекции",
    "section": "Датафреймы",
    "text": "Датафреймы\n\nСоздадим датафрейм df, первая колонка: числа 10, 12, 15, вторая колонка вектор TRUE, FALSE, TRUE, третья колонка любой строковый вектор\n\n\n  c.10..12..15. c.TRUE..FALSE..TRUE. letters.1.3.\n1            10                 TRUE            a\n2            12                FALSE            b\n3            15                 TRUE            c\n\n\nЛучше создать с именами:\n\n\n  values  logi character\n1     10  TRUE         a\n2     12 FALSE         b\n3     15  TRUE         c\n\n\nТакже для переименования можно использовать функцию colnames()\n\ncolnames(df) <- c('name1', 'name2', 'name3')\ndf\n\n  name1 name2 name3\n1    10  TRUE     a\n2    12 FALSE     b\n3    15  TRUE     c\n\n\nИзвлеките 1, 2, 3 строки 5, 6, 9 колонки датасета mtcars (встроен в R, достаточно набрать mtcars).\n\n\n              drat    wt am\nMazda RX4     3.90 2.620  1\nMazda RX4 Wag 3.90 2.875  1\nDatsun 710    3.85 2.320  1"
  },
  {
    "objectID": "posts/tasks/task2.html#установка-пакетов",
    "href": "posts/tasks/task2.html#установка-пакетов",
    "title": "Задания по второй лекции",
    "section": "Установка пакетов",
    "text": "Установка пакетов\n\nУстановите пакет ggplot2 (пакет с CRAN-а для графиков)\n\n\n\nЗагрузите пакет ggplot2\n\n\n\nЗадание со звездочкой (на способность гуглить): удалите (unload) пакет ggplot2 из окружения. Это редко, но иногда может понадобиться, при загрузке ненужного пакета. Однако, я рекомендую перезапустить RStudio комбинацией клавиш Ctrl+Shift+F10, и после этого загрузить уже только нужные пакеты."
  },
  {
    "objectID": "posts/tasks/task2.html#условия",
    "href": "posts/tasks/task2.html#условия",
    "title": "Задания по второй лекции",
    "section": "Условия",
    "text": "Условия\n\nИзвлечь случайное число из набора 0.00015, 0.6, 0.056, 0.02, если число < 0.05, вывести в консоль “p-value < 0.05”, иначе вывести “p-value не значимо”.\n\n\n[1] \"p-value < 0.05\"\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nНапоминаю, что для извлечения случайных чисел используется функция sample()"
  },
  {
    "objectID": "posts/tasks/task2.html#циклы",
    "href": "posts/tasks/task2.html#циклы",
    "title": "Задания по второй лекции",
    "section": "Циклы",
    "text": "Циклы\nНа циклы заданий не будет, потому что все, что я смогла придумать легко решается без циклов. Совет от соника: не использовать циклы."
  },
  {
    "objectID": "posts/tasks/task2.html#векторизация",
    "href": "posts/tasks/task2.html#векторизация",
    "title": "Задания по второй лекции",
    "section": "Векторизация",
    "text": "Векторизация\n\nСоздайте вектор p, состоящий из значений 4, 5, 6, 7, и вектор q, состоящий из 0, 1, 2, 3.\n\n\n[1] 4 5 6 7\n\n\n[1] 0 1 2 3\n\n\nПосчитайте поэлементную сумму векторов p и q:\n\n\n[1]  4  6  8 10\n\n\nПосчитайте поэлементную разницу p и q:\n\n\n[1] 4 4 4 4\n\n\nПоделите каждый элемент вектора p на соответствующий ему элемент вектора q:\n\n\n[1]      Inf 5.000000 3.000000 2.333333\n\n\nСоздайте вектор, в котором будут содержаться первые 20 степеней двойки.\n\n\n [1]       2       4       8      16      32      64     128     256     512\n[10]    1024    2048    4096    8192   16384   32768   65536  131072  262144\n[19]  524288 1048576\n\n\nПосчитайте сумму чисел, кратных 3 ИЛИ кратных 5 в наборе чисел от 1 до 100\n\n\n[1] 2418\n\n\nНайдите сумму всех простых чисел от 1 до 100, где 1 не является простым. Если не получается решить задание сейчас, лучше подождать следующей лекции, разберем более подробно векторизацию и работу с функциями семейства *apply() и создание собственных функций.\n\n\n[1] 1060"
  }
]